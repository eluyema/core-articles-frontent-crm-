/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotfoundImport } from './routes/notfound'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminChristianityCategoriesIndexImport } from './routes/admin/christianity/categories/index'
import { Route as AdminChristianityArticlesIndexImport } from './routes/admin/christianity/articles/index'

// Create/Update Routes

const NotfoundRoute = NotfoundImport.update({
  id: '/notfound',
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminChristianityCategoriesIndexRoute =
  AdminChristianityCategoriesIndexImport.update({
    id: '/christianity/categories/',
    path: '/christianity/categories/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminChristianityArticlesIndexRoute =
  AdminChristianityArticlesIndexImport.update({
    id: '/christianity/articles/',
    path: '/christianity/articles/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/christianity/articles/': {
      id: '/admin/christianity/articles/'
      path: '/christianity/articles'
      fullPath: '/admin/christianity/articles'
      preLoaderRoute: typeof AdminChristianityArticlesIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/christianity/categories/': {
      id: '/admin/christianity/categories/'
      path: '/christianity/categories'
      fullPath: '/admin/christianity/categories'
      preLoaderRoute: typeof AdminChristianityCategoriesIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminChristianityArticlesIndexRoute: typeof AdminChristianityArticlesIndexRoute
  AdminChristianityCategoriesIndexRoute: typeof AdminChristianityCategoriesIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminChristianityArticlesIndexRoute: AdminChristianityArticlesIndexRoute,
  AdminChristianityCategoriesIndexRoute: AdminChristianityCategoriesIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/admin/': typeof AdminIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/christianity/articles': typeof AdminChristianityArticlesIndexRoute
  '/admin/christianity/categories': typeof AdminChristianityCategoriesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notfound': typeof NotfoundRoute
  '/admin': typeof AdminIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/christianity/articles': typeof AdminChristianityArticlesIndexRoute
  '/admin/christianity/categories': typeof AdminChristianityCategoriesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/admin/': typeof AdminIndexRoute
  '/login/': typeof LoginIndexRoute
  '/admin/christianity/articles/': typeof AdminChristianityArticlesIndexRoute
  '/admin/christianity/categories/': typeof AdminChristianityCategoriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/notfound'
    | '/admin/'
    | '/login'
    | '/admin/christianity/articles'
    | '/admin/christianity/categories'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/notfound'
    | '/admin'
    | '/login'
    | '/admin/christianity/articles'
    | '/admin/christianity/categories'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/notfound'
    | '/admin/'
    | '/login/'
    | '/admin/christianity/articles/'
    | '/admin/christianity/categories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  NotfoundRoute: typeof NotfoundRoute
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  NotfoundRoute: NotfoundRoute,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/notfound",
        "/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/",
        "/admin/christianity/articles/",
        "/admin/christianity/categories/"
      ]
    },
    "/notfound": {
      "filePath": "notfound.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/admin/christianity/articles/": {
      "filePath": "admin/christianity/articles/index.tsx",
      "parent": "/admin"
    },
    "/admin/christianity/categories/": {
      "filePath": "admin/christianity/categories/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
